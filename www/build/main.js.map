{"version":3,"sources":["../../src/pages/settings/settings.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/home/home.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/location/location.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAqD;AAC6B;AACzC;AAC4B;AAErE;;GAEG;AAOH;IAuCE,sBACS,OAAsB,EACtB,SAAoB,EACpB,SAA0B,EAC1B,OAAgB,EACf,QAA0B;QAJ3B,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACpB,cAAS,GAAT,SAAS,CAAiB;QAC1B,YAAO,GAAP,OAAO,CAAS;QACf,aAAQ,GAAR,QAAQ,CAAkB;QApCpC,mEAAmE;QACnE,gBAAW,GAAG;YACZ,OAAO,EAAE,EAAE;YACX,WAAW,EAAE,EAAE;YACf,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,EAAE;YACR,OAAO,EAAE,EAAE;SACZ,CAAC;QAEF,oEAAoE;QACpE,oBAAe,GAAG;YAChB,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,IAAI;YACf,IAAI,EAAE,IAAI;SACX,CAAC;QAEF,iDAAiD;QACjD,gBAAW,GAAG;YACZ,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,IAAI;YACZ,SAAS,EAAE,GAAG,CAAU,0CAA0C;SAEnE,CAAC;QAEF,aAAQ,GAAG,KAAK,CAAC,CAAS,4CAA4C;IAUtE,CAAC;IAED;;MAEE;IACA,uCAAgB,GAAhB;QACE,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAEH;;;MAGE;IACF,qCAAc,GAAd;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED;;;MAGE;IACF,qCAAc,GAAd;QAAA,iBAQC;QAPC,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG;YAC5B,EAAE,CAAC,CAAC,KAAI,CAAC,eAAe,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;gBACzC,KAAI,CAAC,WAAW,EAAE,CAAC;YACrB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;YACrB,CAAC;QACH,CAAC;IACH,CAAC;IAED;;;MAGE;IACF,kCAAW,GAAX;QAAA,iBAqBC;QApBC,IAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YACpC,KAAK,EAAE,mBAAmB;YAC1B,OAAO,EAAE,4CAA4C;YACrD,OAAO,EAAE;gBACP;oBACE,IAAI,EAAE,SAAS;oBACf,OAAO,EAAE;wBACP,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;wBAChC,KAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;oBACrB,CAAC;iBACF;gBACD;oBACE,IAAI,EAAE,cAAc;oBACpB,OAAO,EAAE;wBACP,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;oBAC/B,CAAC;iBACF;aACF;SACF,CAAC,CAAC;QACH,OAAO,CAAC,OAAO,EAAE,CAAC;IACpB,CAAC;IAED;;;MAGE;IACF,+BAAQ,GAAR,UAAS,KAAY;QACnB,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,KAAK,CAAC;QAC9B,EAAE,CAAC,CAAC,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,GAAG;YAC7B,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,GAAG,CAAC;QACnC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,YAAY,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC;YAC/B,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,GAAG,CAAC;QACnC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC;YAC/B,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,GAAG,CAAC;QACnC,CAAC;QACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAClD,IAAI,CAAC,YAAY,EAAE,CAAC,CAAS,mDAAmD;IAClF,CAAC;IAED;;;MAGE;IACF,oCAAa,GAAb,UAAc,QAAe;QAA7B,iBAuBC;QAtBC,4DAA4D;QAC5D,EAAE,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,aAAG;gBACnD,KAAI,CAAC,eAAe,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACjD,KAAI,CAAC,eAAe,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;gBAClD,KAAI,CAAC,eAAe,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;gBAC7C,KAAI,CAAC,eAAe,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACjD,KAAI,CAAC,eAAe,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAClD,KAAI,CAAC,eAAe,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBACxC,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,KAAI,CAAC,eAAe,CAAC,CAAC;gBACnD,KAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,KAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC;YAClD,CAAC,EACD,UAAC,KAAK;gBACJ,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,GAAG,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;gBACrE,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACzB,CAAC,CACA,CAAC;QACJ,CAAC;IACH,CAAC;IAED;;;MAGE;IACF,iCAAU,GAAV,UAAW,KAAK;QACd,IAAI,OAAO,GAAG,EAAE,CAAC;QAEjB,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC;YAC1B,OAAO,GAAG,sCAAsC,CAAC;QACnD,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC;YAC1D,OAAO,GAAG,cAAc,CAAC;QAC3B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,OAAO,GAAG,uCAAuC,CAAC;QACpD,CAAC;QAAA,CAAC;QAEF,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAChC,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,kBAAkB;YAC5B,OAAO,EAAE,CAAC,SAAS,CAAC;SACrB,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAED;;;MAGE;IACF,gCAAS,GAAT;QACE,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAChC,KAAK,EAAE,cAAc;YACrB,QAAQ,EAAE,0BAA0B;YACpC,OAAO,EAAE,CAAC,SAAS,CAAC;SACrB,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IAElB,CAAC;IAED;;;MAGE;IACF,mCAAY,GAAZ;QAAA,iBAWC;QAVC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,aAAG;gBACnI,KAAI,CAAC,WAAW,CAAC,WAAW,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBAChD,KAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC;gBAC5D,KAAI,CAAC,WAAW,CAAC,IAAI,GAAG,6CAA6C,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC;gBAC1G,KAAI,CAAC,WAAW,CAAC,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC;gBACtD,KAAI,CAAC,WAAW,CAAC,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;gBACjD,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED;;;MAGE;IACF,sCAAe,GAAf;QAAA,iBAcC;QAbC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;YACvC,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;gBAChB,KAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;YACrC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,CAAmB,sCAAsC;gBAClF,KAAI,CAAC,WAAW,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,+DAA+D;gBAC3G,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;YACzC,CAAC;QACH,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAK;YACX,KAAK,CAAC,yBAAyB,CAAC,CAAC;QACnC,CAAC,CAAC;IACJ,CAAC;IAED;;;;MAIE;IACF,oCAAa,GAAb;QAAA,iBAeC;QAdC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACxB,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;gBACpC,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;oBAChB,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC;oBAC1B,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;gBACnD,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,eAAe,GAAG,GAAG,CAAC;oBAC3B,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC;gBAClD,CAAC;YACH,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAK;gBACX,KAAK,CAAC,yBAAyB,CAAC;YAClC,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED;;MAEE;IACF,mCAAY,GAAZ;QAAA,iBAsBC;QArBC,IAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YACpC,KAAK,EAAE,uBAAuB;YAC9B,OAAO,EAAE,8CAA8C;YACvD,OAAO,EAAE;gBACP;oBACE,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE;wBACP,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;oBAChC,CAAC;iBACF;gBACD;oBACE,IAAI,EAAE,SAAS;oBACf,OAAO,EAAE;wBACP,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;wBAChC,KAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;wBACrB,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC;oBAC5B,CAAC;iBACF;aACF;SACF,CAAC,CAAC;QACH,OAAO,CAAC,OAAO,EAAE,CAAC;IACpB,CAAC;IAED;;MAEE;IACF,kCAAW,GAAX;QACI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACjD,CAAC;IAED;;;;MAIE;IACD,kCAAW,GAAX;QAAA,iBAWA;QAVC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACxB,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;gBACrC,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;oBAChB,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;gBACtB,CAAC;YACH,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAK;gBACX,KAAK,CAAC,yBAAyB,CAAC;YAClC,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IA3SkB;QAAlB,yEAAS,CAAC,6DAAM,CAAC;kCAAS,6DAAM;gDAAC;IADvB,YAAY;QAJxB,wEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;WACG;SAC7B,CAAC;6EAyC+B;YACX,sEAAS;YACT,gEAAe;YACjB,sFAAO;YACL,SAAgB;OA5CzB,YAAY,CA8SxB;IAAD,CAAC;AAAA;SA9SY,YAAY,e;;;;;;;ACdzB;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;;;;;;;;AClB0C;AACqB;AACX;AACiB;AAC5B;AAMzC;IAkEE,kBACS,OAAsB,EACtB,SAA0B,EACzB,OAAgB,EAChB,QAA0B;QAH3B,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAiB;QACzB,YAAO,GAAP,OAAO,CAAS;QAChB,aAAQ,GAAR,QAAQ,CAAkB;QAnDlC;;;UAGE;QACF,gBAAW,GAAG,IAAI,CAAC,CAAO,wBAAwB;QAClD,iBAAY,GAAG,IAAI,CAAC,CAAM,sBAAsB;QAChD,aAAQ,GAAE,IAAI,CAAC,CAAW,mBAAmB;QAC7C,cAAS,GAAE,IAAI,CAAC,CAAU,sBAAsB;QAChD,eAAU,GAAG,KAAK,CAAC,CAAO,sBAAsB;QAChD,WAAM,GAAG,IAAI,CAAC,CAAY,mBAAmB;QAE7C,YAAO,GAAG,IAAI,CAAC,CAAW,wCAAwC;QAGlE,mEAAmE;QACnE,gBAAW,GAAG;YACZ,OAAO,EAAE,EAAE;YACX,WAAW,EAAE,EAAE;YACf,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,EAAE;YACR,OAAO,EAAE,EAAE;SACZ,CAAC;QAGF,oEAAoE;QACpE,oBAAe,GAAG;YAChB,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,IAAI;YACf,IAAI,EAAE,IAAI,CAAe,uCAAuC;SACjE,CAAC;QAUF,aAAQ,GAAG,KAAK,CAAC,CAAU,yBAAyB;IAUtD,CAAC;IAED;;;MAGE;IACF,mCAAgB,GAAhB;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED;;;MAGE;IACF,kCAAe,GAAf;QACE,IAAI,CAAC,aAAa,EAAE;IACtB,CAAC;IAED;;;MAGE;IACF,iCAAc,GAAd;QAAA,iBAqBC;QApBC,2BAA2B;QAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,0CAA0C;QAC1C,IAAI,CAAC,SAAS,GAAE,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAE,IAAI,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAE,IAAI,CAAC;QAEpB;;;UAGE;QACF,UAAU,CAAC;YACT,KAAI,CAAC,aAAa,EAAE,CAAC,CAAK,mCAAmC;YAC7D,KAAI,CAAC,YAAY,EAAE,CAAC,CAAM,qCAAqC;YAC/D,KAAI,CAAC,eAAe,EAAE,CAAC,CAAG,+BAA+B;YACzD,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAM,2BAA2B;YACrD,KAAI,CAAC,QAAQ,GAAE,KAAK,CAAC,CAAK,sCAAsC;QAClE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAmB,iBAAiB;IAC/C,CAAC;IAED;;;MAGE;IACF,+BAAY,GAAZ;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,wEAAY,CAAC,CAAC;IAClC,CAAC;IAED;;;MAGE;IACF,8BAAW,GAAX;QAAA,iBAcC;QAbC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;aAC3B,IAAI,CAAC,UAAC,GAAG;YACR,KAAI,CAAC,eAAe,GAAG,GAAG,CAAC;YAC3B,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC;YAC5C,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC;YACtC,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC;YACtC,KAAI,CAAC,GAAG,GAAG,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;YACzC,KAAI,CAAC,GAAG,GAAG,KAAI,CAAC,eAAe,CAAC,SAAS,CAAC;YAC1C,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC;QAC9C,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAK;YACX,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;QACnD,CAAC,CAAC;IACJ,CAAC;IAED;;;MAGE;IACF,6BAAU,GAAV;QAAA,iBAaC;QAZC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;aAC1B,IAAI,CAAC,UAAC,GAAG;YACR,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACvB,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC;YAChD,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;YAC1C,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC;YAC1C,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC;YACxC,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC;QAC1C,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAK;YACX,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;QAClD,CAAC,CAAC;IACJ,CAAC;IAED;;;MAGE;IACF,+BAAY,GAAZ;QAAA,iBASC;QARC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;aAC9B,IAAI,CAAC,UAAC,GAAG;YACR,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;gBAChB,KAAI,CAAC,MAAM,GAAI,IAAI,CAAC,CAAU,8BAA8B;YAC9D,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,CAAK,+BAA+B;YAC/D,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IAED;;;;MAIE;IACF,gCAAa,GAAb;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,CAAC;IACH,CAAC;IAEH;;;;MAIE;IACF,+BAAY,GAAZ;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC;IACH,CAAC;IAED;;;;;MAKE;IACF,kCAAe,GAAf;QAAA,iBAqBC;QApBC,+FAA+F;QAC/F,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,iCAAiC;QACjC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,aAAG;gBAChE,yEAAyE;gBACzE,EAAE,CAAC,CAAC,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;oBACzB,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,GAAG,CAAC,YAAY,CAAC;oBACnD,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACtB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC,QAAQ,CAAC;oBAC9B,OAAO,CAAC,GAAG,CAAC,cAAc,CAAE;oBAC5B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;gBAC9B,CAAC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACrB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACtB,CAAC;IACH,CAAC;IAED;;;;MAIE;IACF,gCAAa,GAAb;QAAA,iBAaC;QAZC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;aAC5B,IAAI,CAAC,UAAC,GAAG;YACR,EAAE,EAAC,CAAC,GAAG,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;gBACvB,IAAI,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;gBAC1B,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,kBAAkB,EAAE,CAAC;gBACjD,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,kBAAkB,EAAE,CAAC;gBACjD,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;YACzB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC3B,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IAED;;;;MAIE;IACF,6BAAU,GAAV;QAAA,iBAgBC;QAfC,iCAAiC;QACjC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,aAAG;gBACpG,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;oBACvB,IAAI,QAAQ,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAI,2BAA2B;oBACvE,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAC/B,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAC/B,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,SAAS,GAAG,UAAU,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;gBAClE,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,GAAG,CAAC,SAAS,GAAG,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;gBAC5E,CAAC;YACH,CAAC,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;QAChD,CAAC;IACH,CAAC;IAzRU,QAAQ;QAJpB,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;WACG;SACzB,CAAC;mFAoE+B;YACX,gEAAe;YAChB,sFAAO;YACN,KAAgB;OAtEzB,QAAQ,CA2RpB;IAAD,CAAC;AAAA;SA3RY,QAAQ,e;;;;;;;;ACVrB;AAAA;AAAA;AAA2E;AAElC;AAEzC,yGAAsB,EAAE,CAAC,eAAe,CAAC,8DAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJM;AACH;AACkB;AACd;AACN;AACD;AACI;AAEhB;AACM;AACY;AACQ;AAgClE;IAAA;IAAwB,CAAC;IAAZ,SAAS;QA9BrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,6DAAK;gBACL,kEAAQ;gBACR,8EAAY;aACb;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,8EAAgB;gBAChB,kEAAW,CAAC,OAAO,CAAC,6DAAK,EAAE,EAAE,EACjC;oBACE,KAAK,EAAE;wBACL,EAAE,YAAY,EAAE,sDAAsD,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;qBACzJ;iBACF,CAAC;gBACE,0EAAkB,CAAC,OAAO,EAAE;aAC7B;YACD,SAAS,EAAE,CAAC,+DAAQ,CAAC;YACrB,eAAe,EAAE;gBACf,6DAAK;gBACL,kEAAQ;gBACR,8EAAY;aACb;YACD,SAAS,EAAE;gBACT,2EAAS;gBACT,iFAAY;gBACZ,EAAC,OAAO,EAAE,mEAAY,EAAE,QAAQ,EAAE,wEAAiB,EAAC;gBACpD,uFAAgB;aACjB;SACF,CAAC;OACW,SAAS,CAAG;IAAD,gBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AC3CoB;AACD;AACY;AACM;AAEb;AAK9C;IAGE,eAAY,QAAkB,EAAE,SAAoB,EAAE,YAA0B;QAFhF,aAAQ,GAAO,kEAAQ,CAAC;QAGtB,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACpB,gEAAgE;YAChE,iEAAiE;YACjE,SAAS,CAAC,YAAY,EAAE,CAAC;YACzB,YAAY,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAVU,KAAK;QAHjB,wEAAS,CAAC;WACc;SACxB,CAAC;cAIgF;OAHrE,KAAK,CAcjB;IAAD,CAAC;AAAA;SAdY,KAAK,2B;;;;;;;;;;;;;;;;;;;;ACVgC;AACP;AAG3C;;;EAGE;AAEF;IAIE,0BAAmB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QACjC,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;IAEjD,CAAC;IAED,sDAAsD;IACtD,0CAAe,GAAf,UAAgB,QAAe;QAC7B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,yCAAyC,GAAG,QAAQ,CAAC,CAAC;IAC7E,CAAC;IAED,sDAAsD;IACtD,yCAAc,GAAd,UAAe,QAAe,EAAE,GAAU,EAAE,GAAU;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,6CAA6C,GAAG,GAAG,GAAG,OAAO,GAAG,GAAG,GAAG,SAAS,GAAG,QAAQ,GAAG,uCAAuC,CAAC,CAAC;IAC7J,CAAC;IAED,mDAAmD;IACnD,sCAAW,GAAX,UAAY,QAAe;QACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,+CAA+C,GAAG,QAAQ,GAAG,qDAAqD,CAAC,CAAC;IAC3I,CAAC;IAED,wDAAwD;IACxD,sCAAW,GAAX,UAAY,GAAU,EAAE,GAAU;QAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,4FAA4F,GAAG,GAAG,GAAG,OAAO,GAAG,GAAG,CAAC,CAAC;IAC3I,CAAC;IA3BU,gBAAgB;QAD5B,yEAAU,EAAE;yCAKc,wEAAU;OAJxB,gBAAgB,CA4B5B;IAAD,uBAAC;CAAA;AA5B4B","file":"main.js","sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { IonicPage, NavController, Navbar, NavParams, AlertController } from 'ionic-angular';\nimport { Storage } from '@ionic/storage';\nimport { LocationProvider } from '../../providers/location/location';\n\n/**\n * Generated class for the SettingsPage page.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-settings',\n  templateUrl: 'settings.html',\n})\nexport class SettingsPage {\n  @ViewChild(Navbar) navBar: Navbar;\n\n  // Variables to display html elements on Settings page.\n  tempUnit: string;         // Sets temperature unit html radio button\n  currentCity: string;      // Displays currently selected location\n\n  \n  // Object used to store all the data from the weather http request.\n  weatherInfo = {\n    station: \"\",\n    temperature: \"\",\n    forecast: \"\",\n    icon: \"\",\n    windDir: \"\"\n  };\n\n  // Object used to store all the data from the location http request.\n  weatherSettings = {\n    capital: null,\n    country: null,\n    flag: null,\n    latitude: null,         // Parameter for weather data http request\n    longitude: null,        // Parameter for weather data http request\n    code: null\n  };\n\n  // Object used to store the temperature settings.\n  temperature = {\n    unit: \"celsius\",\n    symbol: \"°C\",\n    inputCode: \"M\"          // Parameter for weather data http request\n\n  };\n\n  timeMode = false;         // ngModel value for time mode toggle button\n  \n\n\n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams, \n    public alertCtrl: AlertController,\n    public storage: Storage,\n    private location: LocationProvider) {\n  }\n\n  /*\n  * Functions perform checks for previously stored data in storage.\n  */\n    ionViewWillEnter() {\n      this.initialTempUnit();\n      this.initialLocale();\n      this.initialTime();\n    }\n\n  /*\n  * Function checks that a location has been stored before leaving the Settings page\n  * and displays a custom prompt if no location has been saved.\n  */\n  ionViewDidLoad() {\n    this.validCityCheck();\n  }\n\n  /*\n  * Method adds an additional event to the back button. If there is no value saved \n  * for location then an alert is generated using showConfirm() function.\n  */\n  validCityCheck() {\n    this.navBar.backButtonClick = () => {    \n      if (this.weatherSettings.capital == null) {\n        this.showConfirm();\n      } else {\n        this.navCtrl.pop();\n      }\n    }\n  }\n\n  /*\n  * Creates an alert box with a custom message that prompts the user if they wish to stay\n  * on the current page or return to the Home page. Displayed when no location saved by user.\n  */\n  showConfirm() {\n    const confirm = this.alertCtrl.create({\n      title: 'No location saved',\n      message: 'Return to Home Page without saving a city?',\n      buttons: [\n        {\n          text: 'Go back',\n          handler: () => {\n            console.log('Disagree clicked');\n            this.navCtrl.pop();\n          }\n        },\n        {\n          text: 'Stay on Page',\n          handler: () => {\n            console.log('Agree clicked');\n          }\n        }\n      ]\n    });\n    confirm.present();\n  }\n  \n  /*\n  * Function for temperature setting's radio-buttons. It stores the appropriate \n  * temeprature settings to storage and updates the weather data based on user input.  \n  */\n  setTUnit(value:string) {\n    this.temperature.unit = value;\n    if (value == \"kelvin\") {\n      this.temperature.symbol = \"K\"\n      this.temperature.inputCode = \"S\";\n    } else if (value == \"fahrenheit\") {\n      this.temperature.symbol = \"°F\";\n      this.temperature.inputCode = \"I\";\n    } else {\n      this.temperature.symbol = \"°C\";\n      this.temperature.inputCode = \"M\";\n    }\n    this.storage.set(\"Temperature\", this.temperature);\n    this.storeWeather();         // Updates the weaather data using the new settings\n  }\n\n  /*\n  * Save button function stores user's input location data to storage after requesting \n  * location data from internet location API.\n  */\n  storeLocation(cityName:string) {\n    // Check if a blank entry is entered and return an alert box\n    if (cityName == null || cityName == '') {\n      this.nullALert(); \n    } else {\n      this.location.requestLocation(cityName).subscribe(res => {\n        this.weatherSettings.capital = res[0].capital[0];\n        this.weatherSettings.country = res[0].name.common;\n        this.weatherSettings.flag = res[0].flags.png;\n        this.weatherSettings.latitude = res[0].latlng[0];\n        this.weatherSettings.longitude = res[0].latlng[1];\n        this.weatherSettings.code = res[0].cca2;\n        this.storage.set(\"Settings\", this.weatherSettings);\n        this.initialTempUnit();\n        this.storeWeather();\n        this.currentCity = this.weatherSettings.capital;\n      },\n      (error) => {\n        console.log(\"Error: \" + error.status + \" Message: \" + error.message);\n        this.errorAlert(error);\n      }\n      );\n    }\n  }\n\n  /*\n  * Function displays an alert box with a error message depending on the error status code.\n  * Function is used in setLocale() function when the http resposne for a location returns an error.\n  */\n  errorAlert(error) {\n    let message = \"\";\n\n    if (error.status == \"404\") {\n      message = \"Input Error. Location does not exist\";\n    } else if (error.status == \"503\" || error.status == \"504\") {\n      message = \"Server Error\";\n    } else {\n      message = \"Connection Error. Unable to complete.\";\n    };\n\n    let alert = this.alertCtrl.create({\n      title: message,\n      subTitle: 'Please Try Again',\n      buttons: ['Dismiss']\n    });\n    alert.present();\n  }\n\n  /*\n  * Function displays an alert box with a error message when a blank entry is saved in the Loaction setting.\n  * Used in the storeLocation() function when saving a location.\n  */\n  nullALert() {\n    let alert = this.alertCtrl.create({\n      title: 'Blank input!',\n      subTitle: 'Please enter a city name',\n      buttons: ['Dismiss']\n    });\n    alert.present();\n  \n  }\n\n  /*\n  * If there is a valid location saved in stoarge this function requests weather data from \n  * an internet weather API resource and saves it to the weatherInfo object.\n  */\n  storeWeather() { \n    if (this.weatherSettings.capital != null) {\n      this.location.requestWeather(this.temperature.inputCode, this.weatherSettings.latitude, this.weatherSettings.longitude).subscribe(res => {\n        this.weatherInfo.temperature = res.data[0].temp;\n        this.weatherInfo.forecast = res.data[0].weather.description;\n        this.weatherInfo.icon = \"https://www.weatherbit.io/static/img/icons/\" + res.data[0].weather.icon + \".png\";\n        this.weatherInfo.windDir = res.data[0].wind_cdir_full;\n        this.weatherInfo.station = res.data[0].city_name;\n        this.storage.set(\"Weather\", this.weatherInfo);\n      });\n    }\n  }\n\n  /*\n   * Function checks for temeprature settings stored in storage and if present assigns them\n  * to current settings. If there is no saved data the default value is set of \"celsius\".\n  */\n  initialTempUnit() {\n    this.storage.get('Temperature').then((val) => {\n      if (val == null) {\n        this.tempUnit = \"celsius\";\n        console.log(\"Temp set to default\");\n      } else {\n        this.tempUnit = val.unit;                   // Update the html radio button value.\n        this.temperature.inputCode = val.inputCode; // Important! Update the parameter for requesting weather data.\n        console.log(\"Temp set to \" + val.unit);\n      }\n    })\n    .catch((error) => {\n      alert(\"Error Accessing Storage\");\n    })\n  }\n  \n  /*\n  * Function checks storage for stored location data and assigns it to the weatherSettings\n  * object and updates the current location html element on the Settings page. If no save\n  * data is preset then the current loctaion is set to \"none\".\n  */\n  initialLocale() {\n    this.storage.ready().then(() => {\n      this.storage.get(\"Settings\").then((val) => {\n        if (val == null) {\n          this.currentCity = \"None\";\n          console.log(\"No location data saved in storage\");\n        } else {\n          this.weatherSettings = val;\n          this.currentCity = this.weatherSettings.capital;\n        }\n      })\n      .catch((error) => {\n        alert(\"Error Accessing Storage\")\n      })    \n    }) \n  }\n\n  /*\n  * Function deletes all user settings in storage, resetting the application.\n  */\n  emptyStorage() {\n    const confirm = this.alertCtrl.create({\n      title: 'Delete Saved Settings',\n      message: 'Would you like to delete all saved settings?',\n      buttons: [\n        {\n          text: 'Cancel',\n          handler: () => {\n            console.log('Cancel clicked');\n          }\n        },\n        {\n          text: 'Proceed',\n          handler: () => {\n            console.log('Settings deleted');\n            this.storage.clear();\n            this.currentCity = \"None\";\n          }\n        }\n      ]\n    });\n    confirm.present(); \n  }\n\n  /*\n  * Function stores the time mode setting to storage.\n  */\n  setTimeMode() {\n      this.storage.set(\"LocalTime\", this.timeMode);  \n  }\n\n  /*\n  * Function checks storage for stored location data and assigns it to the weatherSettings\n  * object and updates the current location html element on the Settings page. If no save\n  * data is preset then the current loctaion is set to \"none\".\n  */\n   initialTime() {\n    this.storage.ready().then(() => {\n      this.storage.get(\"LocalTime\").then((val) => {\n        if (val != null) {\n          this.timeMode = val;\n        }\n      })\n      .catch((error) => {\n        alert(\"Error Accessing Storage\")\n      })    \n    }) \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 113;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 113\n// module chunks = 1","var map = {\n\t\"../pages/settings/settings.module\": [\n\t\t279,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 155;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 155\n// module chunks = 1","import { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { SettingsPage } from '../settings/settings';\nimport { LocationProvider } from '../../providers/location/location';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n    \n    // Block of variables to display weather html elements.\n    station: string;\n    temperature: string;\n    symbol: string;\n    forecast: string;\n    forecastIcon: string;\n    windDir: string;\n    \n    \n    // Block of variables to display country html elements.\n    capital: string;\n    country: string;\n    code: string;\n    flag: string;\n    lat: string;\n    lon: string;\n\n    /*\n    * Block of variables used for the hidden attribute in HTML code, \n    * used to display relevant elements depending on available data.\n    */\n    hideWeather = true;       // Weather Information  \n    hideLocation = true;      // Country Information\n    hideNews= true;           // News Information\n    noWeather= true;          // No Weather message \n    noLocation = false;       // No Country message \n    noNews = true;            // No News message \n\n    spinner = true;           // Used to hide the loading spinner icon\n\n    \n    // Object used to store all the data from the weather http request.\n    weatherInfo = {\n      station: \"\",\n      temperature: \"\",\n      forecast: \"\",\n      icon: \"\",\n      windDir: \"\"\n    };\n    \n    \n    // Object used to store all the data from the location http request.\n    weatherSettings = {\n      capital: null,\n      country: null,\n      flag: null,\n      latitude: null,\n      longitude: null,\n      code: null               // Parameter for news data http request\n    };\n\n    \n    // Array used to store all the data from the news items http request.    \n    newsArray: string[];\n\n    // Blocks of variables to store and dispaly the date/time html elements\n    currentDate: string;\n    currentTime: string;\n    timeMode: boolean;         // True for local time, false for GMT time\n    hideTime = false;          // Hide time html element\n    timeZone: string;          // Displays html \"Local\" or \"GMT\" in time header element\n\n\n\n  constructor(\n    public navCtrl: NavController,\n    public alertCtrl: AlertController,\n    private storage: Storage,\n    private location: LocationProvider) {\n  }\n\n  /*\n  * These functions load data from storage for country, weather\n  * and temeprature units before page becomes active.\n  */\n  ionViewWillEnter() {\n    this.getLocation();\n    this.getWeather();\n    this.displayUnits();\n    this.loadingSpinner();\n  }\n\n  /*\n  * This function calculates the current time depending on the time mode setting \n  * after the page has become active.\n  */\n  ionViewDidEnter() {\n    this.checkTimeMode()\n  }\n\n  /*\n  * Function hides the weather & news elements and displays a loading an animated\n  * loading spinner while the inforamtion is reloaded after a 1 second time delay.\n  */\n  loadingSpinner() {\n    // Display loading spinner \n    this.spinner = false;\n    // Hide all the news/weather/time elements\n    this.noWeather= true;\n    this.noNews = true;\n    this.hideWeather = true;\n    this.hideNews= true;\n    this.hideTime= true;\n\n    /* \n    * Three functions perform checks for valid/updated data,\n    * hides elements if no data avalable\n    */\n    setTimeout(() => {\n      this.checkLocation();     // Function checks if valid country\n      this.checkWeather();      // Function checks valid weather data\n      this.assignNewsArray();   // Function updates news itemns\n      this.spinner = true;      // Hide the spinner element\n      this.hideTime= false;     // Display the time/date html elements\n    }, 1000);                   // 1 second delay\n  }\n\n  /*\n  * Function for navigation to the settings page used with\n  * settings button in navigation bar.\n  */\n  openSettings() {\n    this.navCtrl.push(SettingsPage);\n  }\n\n  /*\n  * Function retrives location data stored in storage and assigns\n  * it to variables used for property binding.\n  */\n  getLocation() {\n    this.storage.get(\"Settings\")\n    .then((val) => {\n      this.weatherSettings = val;\n      this.country = this.weatherSettings.country;\n      this.code = this.weatherSettings.code;\n      this.flag = this.weatherSettings.flag;\n      this.lat = this.weatherSettings.latitude;\n      this.lon = this.weatherSettings.longitude;\n      this.capital = this.weatherSettings.capital;\n    })\n    .catch((error) => {\n      console.log(\"No location data saved in storage\");\n    })\n  }\n  \n  /*\n  * Function retrives weather data stored in storage and assigns\n  * it to variables used for property binding.\n  */\n  getWeather() {\n    this.storage.get(\"Weather\")\n    .then((val) => {\n      this.weatherInfo = val;\n      this.temperature = this.weatherInfo.temperature;\n      this.forecast = this.weatherInfo.forecast;\n      this.forecastIcon = this.weatherInfo.icon;\n      this.windDir = this.weatherInfo.windDir;\n      this.station = this.weatherInfo.station;\n    })\n    .catch((error) => {\n      console.log(\"No weather data saved in storage\");\n    })\n  }\n\n  /*\n  * Function checks the temperature symbol saved in storage and saves it\n  * it to a variable for html display.\n  */\n  displayUnits() { \n    this.storage.get(\"Temperature\")\n    .then((val) => {\n      if (val == null) {\n        this.symbol =  \"°C\";          // Sets unit symbol to default\n      } else {\n        this.symbol = val.symbol;     // Sets symbol to saved setting\n      }  \n    })\n  }\n\n  /*\n  * Function checks if there is data stored in the weather settings object\n  * if no data is present then the country html elements are hidden and\n  * a no country selected element is displayed.\n  */\n  checkLocation() {\n    if (this.weatherSettings == null) {\n      this.hideLocation = true;\n      this.noLocation = false;\n    } else {\n      this.hideLocation = false;\n      this.noLocation = true;\n      }\n    }\n\n  /*\n  * Function checks if there is data stored in the weather forecast object,\n  * if no data is present then the weather html elements are hidden and\n  * a no weather available element is displayed.\n  */\n  checkWeather() {  \n    if (this.weatherInfo == null) {\n      this.noWeather = false;\n      this.hideWeather = true;\n    } else {\n      this.hideWeather = false;\n      this.noWeather = true;\n    }   \n  }\n\n  /*\n  * Function checks if data stored in the weather settings object if there\n  * is a valid country code present then a new request for news data news \n  * is sent to news server and news html elements are displayed. If no valid\n  * country code is available then news items elements are not displayed.\n  */\n  assignNewsArray() {\n    // Important! Reset the news array so array is empty if there is no news items after an update.\n    this.newsArray = null;\n    // Check if valid location stored\n    if (this.weatherSettings != null) {\n      this.location.requestNews(this.weatherSettings.code).subscribe(res => {\n        // If totalResults < 1 then the server request has returned no news items\n        if (res.totalResults < 1) {\n          console.log(\"No News Results: \" + res.totalResults)\n          this.noNews = false;\n        } else {\n          this.newsArray = res.articles;\n          console.log(\"News Items: \" )\n          console.log(this.newsArray);\n        }\n      });\n      this.hideNews = false;\n      this.noNews = true;\n    } else {\n      this.noNews = false;\n    }\n  }\n\n  /*\n  * Function checks the current time mode setting saved in storage, if local time\n  * is on then the current local time is displayed, if it is off thenthe assignTime()\n  * function displays the time of the currently selected country saved in storage.\n  */\n  checkTimeMode() {\n    this.storage.get(\"LocalTime\")\n    .then((val) => {\n      if(!val || val == null) {\n        var dateTime = new Date();\n        this.currentDate = dateTime.toLocaleDateString();\n        this.currentTime = dateTime.toLocaleTimeString();\n        this.timeZone = \"GMT \";\n      } else {\n        this.assignTime();\n        this.timeZone = \"Local \";\n      }  \n    })\n  }\n\n  /*\n  * Function checks if data stored in the weather settings object if there is a valid country\n  * coordinates present then a http request for the current date time is sent to a time server. \n  * Console log messages display if an error in retrieving time/date.\n  */\n  assignTime() { \n    // Check if valid location stored\n    if (this.weatherSettings != null) {\n      this.location.requestTime(this.weatherSettings.latitude, this.weatherSettings.longitude).subscribe(res => {    \n        if (res.status == \"OK\") {\n          var dateTime = res.formatted.split(' ');    // Separate the time & date\n          this.currentDate = dateTime[0];\n          this.currentTime = dateTime[1];\n          console.log(\"Time: \" + res.formatted + \"Status: \" + res.status); \n        } else {\n          console.log(\"Error no Time: \" + res.formatted + \" Status: \" + res.status);\n        }\n      })\n    } else {\n      console.log(\"No location set to assign time\");\n    }\n  }  \n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { IonicStorageModule } from '@ionic/storage';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { SettingsPage } from '../pages/settings/settings';\nimport { LocationProvider } from '../providers/location/location';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    SettingsPage\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    IonicModule.forRoot(MyApp),\n    IonicStorageModule.forRoot()\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    SettingsPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    LocationProvider\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/*\n  Generated class for the LocationProvider provider.\n  \n*/\n@Injectable()\nexport class LocationProvider {\n\n\n\n  constructor(public http: HttpClient) {\n    console.log('Hello LocationProvider Provider');\n    \n  }\n\n  // Function requests country data from internet source\n  requestLocation(location:string): Observable<any> {\n    return this.http.get(\"https://restcountries.com/v3.1/capital/\" + location);\n  }\n  \n  // Function requests weather data from internet source\n  requestWeather(unitTemp:string, lat:string, lon:string): Observable<any> {\n    return this.http.get(\"https://api.weatherbit.io/v2.0/current?lat=\" + lat + \"&lon=\" + lon + \"&units=\" + unitTemp + \"&key=1b32ced6fbd04527a5273c5012dcfb7e\");\n  }\n\n  // Function requests news data from internet source\n  requestNews(location:string): Observable<any> {\n    return this.http.get(\"https://newsapi.org/v2/top-headlines?country=\" + location + \"&pageSize=5&apiKey=0587e5206bb8464c80c79e6e96f313fc\");\n  }\n\n  // Function requests time/date data from internet source\n  requestTime(lat:string, lon:string): Observable<any> {\n    return this.http.get(\"http://api.timezonedb.com/v2.1/get-time-zone?key=XE7JNI6TB7HZ&format=json&by=position&lat=\" + lat + \"&lng=\" + lon);\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/location/location.ts"],"sourceRoot":""}